<style lang="less">
	@import '../../../styles/common.less';
	@import '../components/table.less';
</style>

<template>
	<div>
		<Row :gutter="10">
			<Col span="24">
			<Card>
				<Row :gutter="4">
					<Col span="16">
					<Input v-model="searchConName3" placeholder="请输入手机号搜搜..." style="width: 200px" />
					<span @click="handleSearch1" style="margin: 0 10px;">
						<Button type="primary" icon="search">搜索</Button>
					</span>
					</Col>
				</Row>
			</Card>
			<!--<Card :padding="2">
				<Row>
					<Col span="4">
					<span @click="handleAdd" style="margin:0px margin-left:4px;">
							 <Button type="info" size="small" icon="android-add">添加</Button>
						</span>
					</Col>
					<Col span="4">
					<span @click="handleUp" pull="2" style="margin:0 -140px ">
							 <Button type="info" size="small" icon="setting">启用</Button>
						</span>
					</Col>
					<Col span="4">
					<span @click="handleDown" pull="2"  style="margin-left:-280px">
							 <Button type="info" size="small" icon="setting">禁用</Button>
						</span>
					</Col>
					<Col span="4">
					<span pull="2" style="margin:0 -420px ">
							 <Button type="warning" size="small" icon="android-delete" @click="handleDel">删除</Button>
						</span>
					</Col>
				</Row>

			</Card>-->
			<Card>
				<Row class="margin-top-10 searchable-table-con1">
					<Table :columns="columns1" :data="data1" :loading="loadStatus"   @on-selection-change="handleSelectChange">

					</Table>
					<div style="margin: 10px;overflow: hidden" v-if="totalPage > 1">
						<div style="float: right;">
							<Page :total="totalPage" :current="currPage" :page-size="pageSize" @on-change="changePage"></Page>
						</div>
					</div>
				</Row>
			</Card>
			</Col>
		</Row>
	</div>
</template>
<script>
	import * as table from '../data/goodslist';
	import Axios from 'axios';
	export default {
		name: 'searchable-table-goods-list',
		data() {
			return {
				loading: true,
				pageSize: 0,
				totalPage: 0,
				currPage: 1,
				searchConName1: '',
				searchConName2: '',
				searchConName3: '',
				rs: {},
				columns1: [],
				data1: [],
				initTable1: [],
				ids: [],
				tipDia: false
			};
		},
		computed: {
			loadStatus() {
				return this.loading;
			}
		},
		methods: {
		 
			handleSelectChange(selection) { 
				this.ids = [];
				selection.forEach((item) => {
					this.ids.push(item.id);
				}) 
			}, 
				handleDown(){
				if(this.ids.length) {
					var _this = this;
					console.log('tip');
					this.$Modal.confirm({
						title: "下架操作确认",
						content: "真得要下架么？",
						onOk: function() { 
							Axios.post(_this.$store.state.ycypurl+'?r=item/down',_this.ids).then((res)=>{
								console.log(res);
								 
								_this.$Notice.success({
									title:'delete',
									desc:'下架成功',
									duration:1
								});
								_this.$router.go(0);
							}).catch((err)=>{
								console.log(err);
							});
						}
					});
					 
				} else {
					this.$Message.error('请选择要下架的数据');
				}
			},
			handleUp(){
				if(this.ids.length) {
					var _this = this;
					console.log('tip');
					this.$Modal.confirm({
						title: "上架操作确认",
						content: "真得要上架么？",
						onOk: function() { 
							Axios.post(_this.$store.state.ycypurl+'?r=item/up',_this.ids).then((res)=>{
								console.log(res);
							
								_this.$Notice.success({
									title:'delete',
									desc:'上架成功',
									duration:1
								});
								_this.$router.go(0);
							}).catch((err)=>{
								console.log(err);
							});
						}
					});
					 
				} else {
					this.$Message.error('请选择要上架的数据');
				}
			},
			handleDel() {
				console.log(this.ids.length);
				if(this.ids.length) {
					var _this = this;
					console.log('tip');
					this.$Modal.confirm({
						title: "删除操作确认",
						content: "真得要删除么？",
						onOk: function() { 
							Axios.post(_this.$store.state.ycypurl+'?r=item/del',_this.ids).then((res)=>{
								console.log(res);
									
								_this.$Notice.success({
									title:'delete',
									desc:'删除成功',
									duration:1
								});
								_this.$router.go('goodslist');
							
							}).catch((err)=>{
								console.log(err);
							});
						}
					});
					 
				} else {
					this.$Message.error('请选择要删除的数据');
				}
				/*this.$router.push({
					name: 'goodsadd'
				});*/
			},
		 
			handleAdd() {
				this.$router.push({
					name: 'citycmpuseradd'
				});
			},
			changePage(page) {
				this.currPage = page;
				this.rs = {
					username: this.searchConName1,
					realname: this.searchConName2,
					mobile: this.searchConName3
				};
				Axios.post(this.$store.state.ycypurl+'?r=guests/list&curpage=' + page, this.rs).then(
					(res) => {
						this.loading = false;
						//console.log(res.data);
						this.totalPage = res.data.totalPage
						this.pageSize = res.data.pageSize
						//this.currPage.res.data.currpage
						if(res.data.search) {
							if(res.data.search.hasOwnProperty("username")) {
								this.searchConName1 = res.data.search.username;
							}
							if(res.data.search.hasOwnProperty("realname")) {
								this.searchConName2 = res.data.search.realname;
							}
							if(res.data.search.hasOwnProperty("mobile")) {
								this.searchConName3 = res.data.search.mobile;
							}
						}

						this.data1 = this.initTable1 = res.data.rs
					}
				).catch((err) => {
					console.log(err);
				});
				//console.log(page);

				// The simulated data is changed directly here, and the actual usage scenario should fetch the data from the server
				//this.tableData1 = this.mockTableData1();
			},
			init() {
				Axios.get(this.$store.state.ycypurl+'?r=guests/list').then(
					(res) => {
						this.loading = false;
						//console.log(res.data);
						this.totalPage = res.data.totalPage
						//console.log(this.totalPage);
						this.pageSize = res.data.pageSize
						this.currPage = res.data.currpage
						if(res.data.search) {
							if(res.data.search.hasOwnProperty("username")) {
								this.searchConName1 = res.data.search.username;
							}
							if(res.data.search.hasOwnProperty("realname")) {
								this.searchConName2 = res.data.search.realname;
							}
							if(res.data.search.hasOwnProperty("mobile")) {
								this.searchConName3 = res.data.search.mobile;
							}
						}

						//console.log(this.totalPage);
						this.data1 = this.initTable1 = res.data.rs
					}
				).catch((err) => {
					console.log(err);
				});
			},
			handleSearch1() {

				this.rs = {
					mobile: this.searchConName3
				};
				Axios.post(this.$store.state.ycypurl+'?r=guests/list', this.rs).then(
					(res) => {
						this.loading = false;
						console.log(res.data);
						this.totalPage = res.data.totalPage
						this.pageSize = res.data.pageSize
						this.currPage = res.data.currpage
						if(res.data.search) {
							if(res.data.search.hasOwnProperty("username")) {
								this.searchConName1 = res.data.search.username;
							}
							if(res.data.search.hasOwnProperty("realname")) {
								this.searchConName2 = res.data.search.realname;
							}
							if(res.data.search.hasOwnProperty("mobile")) {
								this.searchConName3 = res.data.search.mobile;
							}
						}

						this.data1 = this.initTable1 = res.data.rs
					}
				).catch((err) => {
					console.log(err);
				});
				//this.data1 = this.initTable1;
			}
		},
		mounted() {

			this.init();
			//  this.handleSearch1();
			this.columns1 = [{
					type: 'selection',
					width: 60,
					align: 'center'
				},
				{
					key: 'id',
					title: 'user_id'
				},
				{
					key: 'mobile',
					title: 'mobile'
				},
				{
					key: 'username',
					title: 'account'
				},
				
				{
					key: 'realname',
					title: '姓名'
				},
				
				 
				{
					key: 'email',
					title: 'email'
				},
				 
				{
					key: 'updated_at',
					title: '更新时间'
				},
				 {
					key: 'status',
					title: '状态',
					render: (h, params) => {
						return h('span', {
							props: {
								type: 'text',
								size: 'small'
							},
							 
						}, params.row.status == 1 ? "启用" : '禁用');
					}
				},
				
				{
					key: 'province',
					title: '省',
				 
				},
					{
					key: 'city',
					title: '市',
					 
				},
					{
					key: 'county',
					title: '区/县',
					 
				},
				{
					key: 'addrdetail',
					title: '地址详情',
					ellipsis:true
				},
				/*{
					key: 'operation',
					title: '操作',
					render: (h, params) => {
						return h('a', {
							props: {
								type: 'text',
								size: 'small'
							},
							on: {
								click: () => {
									let query = {
										id: params.row.id
									};
									this.$router.push({
										name: 'goodsedit',
										query: query
									});
								}
							}
						}, '编辑');
					}
				}*/
			];
		}
	};
</script>